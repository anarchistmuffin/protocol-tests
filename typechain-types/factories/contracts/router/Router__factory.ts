/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Router, RouterInterface } from "../../../contracts/router/Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "allowedContractsAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_controllerRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_routeController",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Router.opCodeRouteTypes",
        name: "",
        type: "uint8",
      },
    ],
    name: "RouteControllerChanged",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_ADDRESS",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_ADDRESS_WALLET",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_ADMIN",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_BRIDGE",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_EXT_CONTRACT",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_NEED_AUTH",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_PAYMENT",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_POOL",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_PROXY",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_PUBLIC",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_SUPERADMIN",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_SYSTEM",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_TOKEN",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_TOKEN_ERC1155",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_TOKEN_ERC20",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTE_TYPE_TOKEN_ERC721",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routeController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateRouteControllerBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routeController",
        type: "address",
      },
      {
        internalType: "enum Router.opCodeRouteTypes",
        name: "routeType",
        type: "uint8",
      },
    ],
    name: "delegateRouteControllerByType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routeController",
        type: "address",
      },
      {
        internalType: "enum Router.opCodeRouteTypes",
        name: "routeType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateRouteControllerByTypeBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouteFromRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6102a0604052600760fc1b6080908152609760f81b60a052601160fb1b60c0819052600960fa1b60e052601160f81b61010052600960f91b61012052601360f81b61014052600560fa1b61016052602160f81b61018052603160f81b6101a052601960f91b6101c052603360f81b6101e052600d60fa1b61020052603560f81b61022052609960f81b61024052601360fb1b6102605261028052620000a990600090601162000251565b50348015620000b757600080fd5b506040516200158638038062001586833981016040819052620000da9162000348565b604080517fabcc5a7eb435c8ae1ca7336d9bc4703da26aa3117bb31dc1e837d0d4f652917160208201526355e62d3f60e11b9181019190915260600160408051601f198184030181529190528051602090910120600a556200013c8162000143565b5062000458565b60005b8151811015620001b2576001600c60008484815181106200016b576200016b6200041a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620001a98162000430565b91505062000146565b5060005b6000548110156200024d576001600d6000808481548110620001dc57620001dc6200041a565b600091825260208083208183040154601f9092166101000a90910460f81b7fff000000000000000000000000000000000000000000000000000000000000001683528201929092526040019020805460ff191691151591909117905580620002448162000430565b915050620001b6565b5050565b82805482825590600052602060002090601f01602090048101928215620002ec5791602002820160005b83821115620002bb57835183826101000a81548160ff021916908360f81c021790555092602001926001016020816000010492830192600103026200027b565b8015620002ea5782816101000a81549060ff0219169055600101602081600001049283019260010302620002bb565b505b50620002fa929150620002fe565b5090565b5b80821115620002fa5760008155600101620002ff565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200034357600080fd5b919050565b600060208083850312156200035c57600080fd5b82516001600160401b03808211156200037457600080fd5b818501915085601f8301126200038957600080fd5b8151818111156200039e576200039e62000315565b8060051b604051601f19603f83011681018181108582111715620003c657620003c662000315565b604052918252848201925083810185019188831115620003e557600080fd5b938501935b828510156200040e57620003fe856200032b565b84529385019392850192620003ea565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200045157634e487b7160e01b600052601160045260246000fd5b5060010190565b61111e80620004686000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639d9dc5a5116100b8578063dddfffb51161007c578063dddfffb514610224578063e286bb0f1461022f578063e37ecf5514610242578063e72420881461024d578063e77d76db14610258578063f474c8091461026357610137565b80639d9dc5a5146101e55780639e9db874146101f0578063be9d89a6146101fb578063c7890ff114610206578063dc96cb541461021957610137565b80634c729120116100ff5780634c729120146101a657806383450e86146101b95780638465c261146101c4578063846edbaa146101cf578063969073ce146101da57610137565b806310ba712c1461014557806312c253981461016e57806317ad22d2146101795780633644e515146101845780633e4e54e91461019b575b6101433360003661026b565b005b610150600960fa1b81565b6040516001600160f81b031990911681526020015b60405180910390f35b610150601360f81b81565b610150609960f81b81565b61018d600a5481565b604051908152602001610165565b610150600960f91b81565b6101436101b4366004610b06565b610389565b610150609760f81b81565b610150600560fa1b81565b610150603560f81b81565b610150601160f81b81565b610150603360f81b81565b610150603160f81b81565b610150601960f91b81565b610143610214366004610b4a565b610398565b610150600760fc1b81565b610150600d60fa1b81565b61014361023d366004610bb4565b6105d4565b610150601160fb1b81565b610150601360fb1b81565b610150602160f81b81565b6101436107d2565b600061027982840184610f0d565b905080606001516001600160a01b0316846001600160a01b0316146103005760405162461bcd60e51b815260206004820152603260248201527f666f7267656420726571756573742070726f74656374696f6e3a2072657175656044820152717374207365656d732064616e6765726f757360701b60648201526084015b60405180910390fd5b805160009081526006602052604090205460ff16151560010361037a5760405162461bcd60e51b815260206004820152602c60248201527f7265706c61792070726f74656374696f6e3a207265717565737420696420616c60448201526b72656164792065786973747360a01b60648201526084016102f7565b61038381610828565b50505050565b610394338383610869565b5050565b60007fabcc5a7eb435c8ae1ca7336d9bc4703da26aa3117bb31dc1e837d0d4f65291718888600d8111156103ce576103ce610fd7565b604080516001600160e01b031990941660208501526001600160a01b039092169183019190915260608201526080810187905260a0810186905260c0016040516020818303038152906040528051906020012090506000600a548260405160200161045092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa1580156104bb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105125760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b60448201526064016102f7565b6001600160a01b0381166000908152600e6020526040812080549161053683610fed565b9190505588146105785760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b60448201526064016102f7565b864211156105bd5760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa2ac2824a920aa24a7a760711b60448201526064016102f7565b6105c8818b8b610869565b50505050505050505050565b604080517fabcc5a7eb435c8ae1ca7336d9bc4703da26aa3117bb31dc1e837d0d4f65291716020808301919091526001600160a01b038916828401526060820188905260808083018890528351808403909101815260a083019093528251920191909120600a5461190160f01b60c084015260c283015260e28201819052906000906101020160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa1580156106c5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661071c5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b60448201526064016102f7565b6001600160a01b0381166000908152600e6020526040812080549161074083610fed565b9190505588146107825760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b60448201526064016102f7565b864211156107c75760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa2ac2824a920aa24a7a760711b60448201526064016102f7565b505050505050505050565b336000908152600c602052604090205460ff1615156001146108265760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4c8111153925151609a1b60448201526064016102f7565b565b600061083382610957565b905061083e816109a3565b15156001146103945760405162461bcd60e51b815260206004820152600060248201526044016102f7565b6001600160a01b0382166108bf5760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f524f5554455f434f4e54524f4c4c4552000000000000000060448201526064016102f7565b600b8281600084600d8111156108d7576108d7610fd7565b600d8111156108e8576108e8610fd7565b81526020810191909152604090810160002080546001600160a01b0319166001600160a01b0393841617905551848216918616907f73efc0b70a501479002e97b96fa87ddb413f80f21ee962fefef41e1e68dfbd0390610949908690611014565b60405180910390a350505050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000826020015180602001905181019061099c9190611054565b9392505050565b600154815160009160e01b6001600160e01b03199081169116146109ff5760405162461bcd60e51b8152602060048201526013602482015272696e76616c696420726f757465206d6167696360681b60448201526064016102f7565b6020808301516001600160f81b03191660009081526003909152604090205460ff161515600114610a635760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964206f70636f646560901b60448201526064016102f7565b6040808301516001600160e01b03191660009081526005602052205460ff161515600114610ad35760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420636f6e74726f6c6c657220696e746572666163652069640060448201526064016102f7565b506001919050565b80356001600160a01b0381168114610af257600080fd5b919050565b8035600e8110610af257600080fd5b60008060408385031215610b1957600080fd5b610b2283610adb565b9150610b3060208401610af7565b90509250929050565b803560ff81168114610af257600080fd5b600080600080600080600060e0888a031215610b6557600080fd5b610b6e88610adb565b9650610b7c60208901610af7565b95506040880135945060608801359350610b9860808901610b39565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c08789031215610bcd57600080fd5b610bd687610adb565b95506020870135945060408701359350610bf260608801610b39565b92506080870135915060a087013590509295509295509295565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c4557610c45610c0c565b60405290565b60405160c0810167ffffffffffffffff81118282101715610c4557610c45610c0c565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c9757610c97610c0c565b604052919050565b600082601f830112610cb057600080fd5b813567ffffffffffffffff811115610cca57610cca610c0c565b610cdd601f8201601f1916602001610c6e565b818152846020838601011115610cf257600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115610d2957610d29610c0c565b5060051b60200190565b6001600160e01b031981168114610d4957600080fd5b50565b600082601f830112610d5d57600080fd5b81356020610d72610d6d83610d0f565b610c6e565b82815260059290921b84018101918181019086841115610d9157600080fd5b8286015b84811015610e1057803567ffffffffffffffff80821115610db65760008081fd5b908801906040828b03601f1901811315610dd05760008081fd5b610dd8610c22565b8784013583811115610dea5760008081fd5b610df88d8a83880101610c9f565b82525092013586830152508352918301918301610d95565b509695505050505050565b60006040808385031215610e2e57600080fd5b610e36610c22565b9150823567ffffffffffffffff80821115610e5057600080fd5b818501915085601f830112610e6457600080fd5b81356020610e74610d6d83610d0f565b82815260069290921b84018101918181019089841115610e9357600080fd5b948201945b83861015610edc5786868b031215610eb05760008081fd5b610eb8610c22565b8635610ec381610d33565b8152868401358482015282529486019490820190610e98565b87525086810135945082851115610ef257600080fd5b610efe88868901610d4c565b81870152505050505092915050565b600060208284031215610f1f57600080fd5b813567ffffffffffffffff80821115610f3757600080fd5b9083019060c08286031215610f4b57600080fd5b610f53610c4b565b82358152602083013582811115610f6957600080fd5b610f7587828601610c9f565b602083015250604083013582811115610f8d57600080fd5b610f9987828601610e1b565b604083015250610fab60608401610adb565b6060820152610fbc60808401610adb565b608082015260a083013560a082015280935050505092915050565b634e487b7160e01b600052602160045260246000fd5b60006001820161100d57634e487b7160e01b600052601160045260246000fd5b5060010190565b60208101600e831061103657634e487b7160e01b600052602160045260246000fd5b91905290565b80516001600160f81b031981168114610af257600080fd5b600060a0828403121561106657600080fd5b60405160a0810181811067ffffffffffffffff8211171561108957611089610c0c565b604052825161109781610d33565b81526110a56020840161103c565b602082015260408301516110b881610d33565b60408201526110c96060840161103c565b606082015260808301516110dc81610d33565b6080820152939250505056fea2646970667358221220893463d50cb89e67870efde85459738e8a67a520dac3415032bef5395177a23764736f6c634300080e0033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    allowedContractsAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(
      allowedContractsAddresses,
      overrides || {}
    ) as Promise<Router>;
  }
  override getDeployTransaction(
    allowedContractsAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      allowedContractsAddresses,
      overrides || {}
    );
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
