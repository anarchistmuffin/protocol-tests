/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LabzToken,
  LabzTokenInterface,
} from "../../../contracts/token/LabzToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_revision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612525806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ecebe0011610104578063a9059cbb116100a2578063d28d885211610071578063d28d88521461040f578063d505accf14610417578063dd62ed3e1461042a578063f1127ed81461043d57600080fd5b8063a9059cbb146103ce578063b09f1266146103e1578063b119490e146103e9578063c3cda520146103fc57600080fd5b806395d89b41116100de57806395d89b411461038d578063981b24d0146103955780639ab24eb0146103a8578063a457c2d7146103bb57600080fd5b80637ecebe001461035d5780638e539e8c1461037057806394462d9c1461038357600080fd5b8063395093511161017c578063587cde1e1161014b578063587cde1e146102b35780635c19a95c146102f75780636fcfff451461030c57806370a082311461033457600080fd5b806339509351146102705780633a46b1a8146102835780633eaaf86b146102965780634ee2cd7e146102a057600080fd5b806323b872dd116101b857806323b872dd14610232578063313ce5671461024557806332424aa31461025a5780633644e5151461026857600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e761047a565b6040516101f49190612033565b60405180910390f35b61021061020b36600461209f565b61050c565b60405190151581526020016101f4565b6035545b6040519081526020016101f4565b6102106102403660046120c9565b610526565b60125b60405160ff90911681526020016101f4565b610132546102489060ff1681565b61022461054a565b61021061027e36600461209f565b610559565b61022461029136600461209f565b61057b565b6102246101345481565b6102246102ae36600461209f565b6105fa565b6102df6102c1366004612105565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b0390911681526020016101f4565b61030a610305366004612105565b610653565b005b61031f61031a366004612105565b610660565b60405163ffffffff90911681526020016101f4565b610224610342366004612105565b6001600160a01b031660009081526033602052604090205490565b61022461036b366004612105565b610682565b61022461037e366004612120565b6106a0565b6102246101335481565b6101e76106fc565b6102246103a3366004612120565b61070b565b6102246103b6366004612105565b610736565b6102106103c936600461209f565b6107bd565b6102106103dc36600461209f565b610838565b6101e7610846565b61030a6103f73660046121dc565b6108d5565b61030a61040a36600461225a565b6109b0565b6101e7610ae6565b61030a6104253660046122b2565b610af4565b61022461043836600461231c565b610c58565b61045061044b36600461234f565b610c83565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101f4565b6060603680546104899061238f565b80601f01602080910402602001604051908101604052809291908181526020018280546104b59061238f565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b5050505050905090565b60003361051a818585610d07565b60019150505b92915050565b600033610534858285610e2b565b61053f858585610e9f565b506001949350505050565b600061055461107e565b905090565b60003361051a81858561056c8383610c58565b61057691906123d9565b610d07565b60004382106105d15760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260cd602052604090206105f390836110f9565b9392505050565b6001600160a01b038216600090815260fe60205260408120819081906106219085906111b6565b9150915081610648576001600160a01b03851660009081526033602052604090205461064a565b805b95945050505050565b61065d33826112ac565b50565b6001600160a01b038116600090815260cd602052604081205461052090611326565b6001600160a01b038116600090815260996020526040812054610520565b60004382106106f15760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105c8565b61052060ce836110f9565b6060603780546104899061238f565b600080600061071b8460ff6111b6565b915091508161072c5760355461072e565b805b949350505050565b6001600160a01b038116600090815260cd602052604081205480156107aa576001600160a01b038316600090815260cd602052604090206107786001836123f1565b8154811061078857610788612408565b60009182526020909120015464010000000090046001600160e01b03166107ad565b60005b6001600160e01b03169392505050565b600033816107cb8286610c58565b90508381101561082b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105c8565b61053f8286868403610d07565b60003361051a818585610e9f565b61013180546108549061238f565b80601f01602080910402602001604051908101604052809291908181526020018280546108809061238f565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b60006108e1600161138f565b905080156108f9576000805461ff0019166101001790555b835161090d90610130906020870190611fa3565b50825161092290610131906020860190611fa3565b50610132805460ff19166012179055600161013355610941848461141c565b61094a84611451565b610954338361149b565b61095c6114a5565b6109646114a5565b80156109aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b83421115610a005760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105c8565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610a7a90610a729060a001604051602081830303815290604052805190602001206114ce565b85858561151c565b9050610a8581611544565b8614610ad35760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105c8565b610add81886112ac565b50505050505050565b61013080546108549061238f565b83421115610b445760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105c8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b738c611544565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bce826114ce565b90506000610bde8287878761151c565b9050896001600160a01b0316816001600160a01b031614610c415760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105c8565b610c4c8a8a8a610d07565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610cc757610cc7612408565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610d695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c8565b6001600160a01b038216610dca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c8565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e378484610c58565b905060001981146109aa5781811015610e925760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105c8565b6109aa8484848403610d07565b6001600160a01b038316610f035760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105c8565b6001600160a01b038216610f655760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c8565b610f7083838361156c565b6001600160a01b03831660009081526033602052604090205481811015610fe85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105c8565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061101f9084906123d9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161106b91815260200190565b60405180910390a36109aa84848461157c565b60006105547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6110ad60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b8181101561115d5760006111148284611587565b90508486828154811061112957611129612408565b60009182526020909120015463ffffffff16111561114957809250611157565b6111548160016123d9565b91505b50611100565b81156111a1578461116f6001846123f1565b8154811061117f5761117f612408565b60009182526020909120015464010000000090046001600160e01b03166111a4565b60005b6001600160e01b031695945050505050565b600080600084116112025760405162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b60448201526064016105c8565b61120a6115a2565b8411156112595760405162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e7420696400000060448201526064016105c8565b600061126584866115ae565b8454909150810361127d5760008092509250506112a5565b600184600101828154811061129457611294612408565b906000526020600020015492509250505b9250929050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46109aa828483611673565b600063ffffffff82111561138b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105c8565b5090565b60008054610100900460ff16156113d6578160ff1660011480156113b25750303b155b6113ce5760405162461bcd60e51b81526004016105c89061241e565b506000919050565b60005460ff8084169116106113fd5760405162461bcd60e51b81526004016105c89061241e565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166114435760405162461bcd60e51b81526004016105c89061246c565b61144d82826117b0565b5050565b600054610100900460ff166114785760405162461bcd60e51b81526004016105c89061246c565b61065d81604051806040016040528060018152602001603160f81b8152506117fe565b61144d828261183f565b600054610100900460ff166114cc5760405162461bcd60e51b81526004016105c89061246c565b565b60006105206114db61107e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061152d878787876118c9565b9150915061153a816119b6565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b611577838383611b6c565b505050565b611577838383611bb4565b600061159660028484186124b7565b6105f3908484166123d9565b60006105546101015490565b815460009081036115c157506000610520565b82546000905b8082101561161d5760006115db8383611587565b9050848682815481106115f0576115f0612408565b9060005260206000200154111561160957809150611617565b6116148160016123d9565b92505b506115c7565b600082118015611652575083856116356001856123f1565b8154811061164557611645612408565b9060005260206000200154145b1561166b576116626001836123f1565b92505050610520565b509050610520565b816001600160a01b0316836001600160a01b0316141580156116955750600081115b15611577576001600160a01b03831615611723576001600160a01b038316600090815260cd6020526040812081906116d090611be685611bf2565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611718929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611577576001600160a01b038216600090815260cd60205260408120819061175990611d6b85611bf2565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516117a1929190918252602082015260400190565b60405180910390a25050505050565b600054610100900460ff166117d75760405162461bcd60e51b81526004016105c89061246c565b81516117ea906036906020850190611fa3565b508051611577906037906020840190611fa3565b600054610100900460ff166118255760405162461bcd60e51b81526004016105c89061246c565b815160209283012081519190920120606591909155606655565b6118498282611d77565b6035546001600160e01b0310156118bb5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105c8565b6109aa60ce611d6b83611bf2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561190057506000905060036119ad565b8460ff16601b1415801561191857508460ff16601c14155b1561192957506000905060046119ad565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561197d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119a6576000600192509250506119ad565b9150600090505b94509492505050565b60008160048111156119ca576119ca6124d9565b036119d25750565b60018160048111156119e6576119e66124d9565b03611a335760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c8565b6002816004811115611a4757611a476124d9565b03611a945760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c8565b6003816004811115611aa857611aa86124d9565b03611b005760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c8565b6004816004811115611b1457611b146124d9565b0361065d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105c8565b6001600160a01b038316611b8b57611b8382611e6a565b611577611e9d565b6001600160a01b038216611ba257611b8383611e6a565b611bab83611e6a565b61157782611e6a565b6001600160a01b03838116600090815260cc602052604080822054858416835291205461157792918216911683611673565b60006105f382846123f1565b825460009081908015611c3d5785611c0b6001836123f1565b81548110611c1b57611c1b612408565b60009182526020909120015464010000000090046001600160e01b0316611c40565b60005b6001600160e01b03169250611c5983858763ffffffff16565b9150600081118015611c9757504386611c736001846123f1565b81548110611c8357611c83612408565b60009182526020909120015463ffffffff16145b15611cf757611ca582611eab565b86611cb16001846123f1565b81548110611cc157611cc1612408565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611d62565b856040518060400160405280611d0c43611326565b63ffffffff168152602001611d2085611eab565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006105f382846123d9565b6001600160a01b038216611dcd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105c8565b611dd96000838361156c565b8060356000828254611deb91906123d9565b90915550506001600160a01b03821660009081526033602052604081208054839290611e189084906123d9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361144d6000838361157c565b6001600160a01b038116600090815260fe6020908152604080832060339092529091205461065d9190611f14565b611f14565b6114cc60ff611e9860355490565b60006001600160e01b0382111561138b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105c8565b6000611f1e6115a2565b905080611f2a84611f5e565b1015611577578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b80546000908103611f7157506000919050565b81548290611f81906001906123f1565b81548110611f9157611f91612408565b90600052602060002001549050919050565b828054611faf9061238f565b90600052602060002090601f016020900481019282611fd15760008555612017565b82601f10611fea57805160ff1916838001178555612017565b82800160010185558215612017579182015b82811115612017578251825591602001919060010190611ffc565b5061138b9291505b8082111561138b576000815560010161201f565b600060208083528351808285015260005b8181101561206057858101830151858201604001528201612044565b81811115612072576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461141757600080fd5b600080604083850312156120b257600080fd5b6120bb83612088565b946020939093013593505050565b6000806000606084860312156120de57600080fd5b6120e784612088565b92506120f560208501612088565b9150604084013590509250925092565b60006020828403121561211757600080fd5b6105f382612088565b60006020828403121561213257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261216057600080fd5b813567ffffffffffffffff8082111561217b5761217b612139565b604051601f8301601f19908116603f011681019082821181831017156121a3576121a3612139565b816040528381528660208588010111156121bc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156121f157600080fd5b833567ffffffffffffffff8082111561220957600080fd5b6122158783880161214f565b9450602086013591508082111561222b57600080fd5b506122388682870161214f565b925050604084013590509250925092565b803560ff8116811461141757600080fd5b60008060008060008060c0878903121561227357600080fd5b61227c87612088565b9550602087013594506040870135935061229860608801612249565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156122cd57600080fd5b6122d688612088565b96506122e460208901612088565b9550604088013594506060880135935061230060808901612249565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561232f57600080fd5b61233883612088565b915061234660208401612088565b90509250929050565b6000806040838503121561236257600080fd5b61236b83612088565b9150602083013563ffffffff8116811461238457600080fd5b809150509250929050565b600181811c908216806123a357607f821691505b60208210810361156657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156123ec576123ec6123c3565b500190565b600082821015612403576124036123c3565b500390565b634e487b7160e01b600052603260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826124d457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206d410d90cb8f9d783cd937b360b888e63ec91e032b88a2a0ffbc9be84a93332f64736f6c634300080e0033";

type LabzTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LabzTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LabzToken__factory extends ContractFactory {
  constructor(...args: LabzTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LabzToken> {
    return super.deploy(overrides || {}) as Promise<LabzToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LabzToken {
    return super.attach(address) as LabzToken;
  }
  override connect(signer: Signer): LabzToken__factory {
    return super.connect(signer) as LabzToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LabzTokenInterface {
    return new utils.Interface(_abi) as LabzTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LabzToken {
    return new Contract(address, _abi, signerOrProvider) as LabzToken;
  }
}
