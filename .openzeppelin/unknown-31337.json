{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0ed64d01D0B4B655E410EF1441dD677B695639E7",
    "txHash": "0xfe2f181009ae1461d5a108bd4c4558dbb4eaab88cd6f7a0f28ef99c1a7f8f737"
  },
  "proxies": [
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x57e7a4c40ea6ec95eb5c79fd96ecec3ec89057e92c20713acd62ca5baa24cb32",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xfd5e4b08ab267dcd37efb05eb7c224472b73452b6a5e15377cddf3f1f291215a",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x9ea8c96aa9fe8222ae11e720f5dac0b216eda6173e3a4de16150fd3fcaeaac6f",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7193d5054b39a84dbd85e2193f77a0d315962e3d42fa0744b97a43ac9f5b40c1",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x9dd821395b899cdaeac23924eaea32b4bf5159146364812768c17b942790a011",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x2eec5c4a617d3131c69de40dd960804a720cd21693562a9db83a4a65979202eb",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x363308bbaf248f9e16a921b04121e3cde5e242cf8aaa6db87b81518f5524ebcc",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x6f25db95e1795e97dde99f7a4322a1b12fe382c1e4152538a0f32a20ddf18a4f",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xda1d22ffec2f9f5f8a88cdf523384445dce280f27c1552aac2d95df9b7691daa",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xef784ac756e44c972bde70b749f27890860fcc8cae4fec5e120c59b68adb987b",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x3b3ae461702ff17cf5624db71020c2b047114c5072c3c2596bc4af84186da01a",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xb9fb23be74c9e0c032c4b3df6f5338879f88ecc7874958c4c685932c13fc5e42",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x751c09aa05e9e57de0afc2f30f60e914de8a46a82ecc158d1f746da7a59903ae",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x1651c7c568913a431ba753af90a97a601aac260a44bb2bc89087da315ed2992c",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0xaed3875b7d980c7e9397e408683ee2191e82675e4a0b3b9167b7f03d2a68871f",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x4206704e064bc8782271a1e5fe52b7ca5e4ecc365d3e18420dfdbd8bcf992494",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x1b8bd149295d382e421802c832b0b7e984e3261dfde60194ca15f14474edf34d",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xfa5744f73990c08cd2e543c9f4f8b4403aefccdaf64b2eff1d9f870ec3b61d44",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0xcfb6a8d4d5b262b2a9b39f718349d87685ec82b189c8a59fb1de1d7d0c741838",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0x986605aebb103969fe89053f60329245aaaa1c0e8fed1015eb94ca2817e62ce1",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x78a245ec30041b46bdc5656097a8bf5350e6e77c0b965a53ca9a66f8e21704bc",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0xe7f2e7c2476f737a28428f1cffea60bbe462d790ca65a1b8a94b5e2a2132b4c5",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xef15ca25e7e093a2e98f85acddec0d001382bad80e592d312b762c99ff4e0045",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x31528a7dcf7ee38bd828bc70da49b8f1572980aae7e020337dc866f301afda65",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x3fa8f05d7d16f0c908e16b302bbc1b5c68492fd67e41d213f72bd2d73152ec12",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x376e4a3b1723206466c6925075566b3f64d13c0193117f815c6b60f177439148",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0xb9bc26da721e2224027033d945e1644022b239592ed6d2004e94d0ef217497a7",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0xd0d82e8596d13f847e5464505e235b50ca91faa93bbf86479c60bf8c4127d734",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0xd2d7eea5493846d0e3c8eb2751c264598f41a33fd5f9d346d0b27e3dee58b7b3",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x12a50a4203394fc6c7fc882e050bc20b329f4f77a0ebd257a5580a60d29d1796",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x15377a4df252c9d93e4171f265653198c2deded655e87fe802a7e016b5f75620",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x064d6d56e426a99efe75958fa6e43395fd08868b816ae4572923f72804a54673",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0xd244163ae5cd82ebbaa663ab4d1aff01a3517095406fed1b1f73336cbd4920b0",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0x2f653e3d914dff9e3425f704074a36689bdc9ff0e2685690290371e2d3182f46",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0xbc3d0dcb062c5548fc889148598053ae600cbd6d745cdd28a6c2b94604e76b6a",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x1fee18490568baf9db100956d4533e5855b12099e2fcdd3c38592c83a41f4f1c",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x350a311b6c1d8098672ff44cf44d2cd99914c782e84779c285e19913d027d48e",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0x09de0e2be87bda1ca19eac8465eea5f367659d437b485f6359b6a4581e718e82",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0xa61ef966dbc4825ba12e3d37f16dbfdca65a8f8b4bc91e0e6f136f46c0c3912e",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x28441b9a190db07674bfcbb20f9c081d9ee16ffabd309a8c2c64c16df6a6cb50",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x63cd4d9fafdcfb80f28b5272acc2293e259417568f165adf6eb6776face17f17",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x4066b59c7f6d7d77371c527b173e9514be78b45202d0b431e94c0f8fdfd9e413",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0xedd7a1701409c85bd05469191a059025c0b5bd1da21b48d390d21859de89d4f3",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0xc38a06e06b0b393a441fac65ba3b7a1a27c364f3ecef87e3a9c2c87a0c5c0a83",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x9803920970a21ff61c7e2385dd8bb50860add2febc0c74abb2c6155927ccacc2",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xbb71bca05ae45645b3e0c882f20cb4ad6e39dcffbf59e1978069677ce55de060",
      "kind": "transparent"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x9e4c4464159caff952d9760dd8bf0533cf675ae53ceda70a69038e057304dabf",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0x967f29923fcd84f62b342134ce1607d569d375ad5022c32278eafc557197bfbb",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0x84643e337521b631a5b8abbd1ff544f43699659f0144ece06227d9c5ce63f82b",
      "kind": "transparent"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x8fe0317dfae1dcb1ad917d0ededd6e411880f88f5be152d04df13a63cf831381",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x046751ab137d020ce37189f2de5f81475145ce35dc01ded201b23fd8ed5956f4",
      "kind": "transparent"
    },
    {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0x44a01305f208adf554f081b6b56ee7449b744a6a72e16a5fa7d4cfb2268b1e6a",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0x3b3aa4db96e2befebe514da45841b3952a26c03cd344cb06ab6c0cb81423d8bc",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0xe09fc829fb8d8d750df1454d9ad7953e1ebd60610c9e4f48330b58540ccc6ad0",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0xb17030c3467adf4413a7a2c051a5670ca0db4008cead823effdc8a380162a1e5",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0xc6bdae76d1e522e0e0cc3a2e967b31f1ccfb86992224716ae432fca5619d7d7f",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0xf3f568fa32fb91159c80f2ba10304903cd53836eb11df4590bd4157035a0fb34",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0xb29a0f79058b8ba189da72a1cbad47310c7be74fcce214037c4687e7640fb6a6",
      "kind": "transparent"
    },
    {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0xd99fcc5fa557e2de442b76fdca256a28090a67e9d3980aeee8e2a2b5fb20441f",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0x24bf1d1bbf971d4dfb5978849d7e9537f655212070e1a1e65aea25b86884797a",
      "kind": "transparent"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0x95407ca2ff9819f9d5ddf68a14afd7e502bdfecaf1c1187f6b1117956ed17197",
      "kind": "transparent"
    },
    {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0xa93f8918ae15b4acf30e9f8e7b71745ce819b3fcdbf7eb0b6ab15319f0cc3726",
      "kind": "transparent"
    },
    {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0xecf562f4c201774b9d8cbe21fe50c2c46b180a6c903e9e38e791e878cc5a50ca",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0x1be361a3eb22eca2def576b89edb1f1212c0ab98c15c90eb3c70b06f77435e71",
      "kind": "transparent"
    },
    {
      "address": "0x07882Ae1ecB7429a84f1D53048d35c4bB2056877",
      "txHash": "0x4f04d0421c345834100687309002280dba030432b2353392c2ca1e074405137b",
      "kind": "beacon"
    },
    {
      "address": "0x4bf010f1b9beDA5450a8dD702ED602A104ff65EE",
      "txHash": "0x963271096fbba5b60aaa5c715614bfbe34ee13dc695b9b4ae3e484ce38ab14ca",
      "kind": "transparent"
    },
    {
      "address": "0x40a42Baf86Fc821f972Ad2aC878729063CeEF403",
      "txHash": "0x6bfdca673899dcb439d698b762eac9e8f554239f9ce96c39f80a98f92a452672",
      "kind": "transparent"
    },
    {
      "address": "0x96F3Ce39Ad2BfDCf92C0F6E2C2CAbF83874660Fc",
      "txHash": "0x3ddc8da4b2c8fc23b16fed81f3c852db0f38f0d7368be0911edcbf3cbdefc34b",
      "kind": "transparent"
    },
    {
      "address": "0x986aaa537b8cc170761FDAC6aC4fc7F9d8a20A8C",
      "txHash": "0x490ea4513cde6b9151fc01cea5d37df5b22d923a263ae80e9fb29548b3425903",
      "kind": "transparent"
    },
    {
      "address": "0x870526b7973b56163a6997bB7C886F5E4EA53638",
      "txHash": "0xfabe819fc5ab9b287fe6b9b426662d0eee77c59bb96aa9757d2d2fe65041530a",
      "kind": "transparent"
    },
    {
      "address": "0xB2b580ce436E6F77A5713D80887e14788Ef49c9A",
      "txHash": "0x1dbdd55a39f34eb51cafe020fb099a0687ab6b080fac5b3e85254d723ddd0027",
      "kind": "beacon"
    }
  ],
  "impls": {
    "f5b0b687f7fb4fa1351dd557999ee5f6bec12c0b635349a46586fd4cc3ccd32c": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xbc5c408e583181439edb1ea92213db0501bfe7fdb57662218785dcc73797a7bf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:14"
          },
          {
            "label": "_eip712Access",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:15"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:16"
          },
          {
            "label": "_hasAccess",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:17"
          },
          {
            "label": "_strToRoleBytes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:18"
          },
          {
            "label": "_hasAccessToResourceWithIdAndRole",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:19"
          },
          {
            "label": "_addrToRoleBytes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:20"
          },
          {
            "label": "ACL_SLOT_STORAGE",
            "offset": 0,
            "slot": "8",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:23"
          },
          {
            "label": "ACL_SLOT_ENCODED_ACCESS",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:24"
          },
          {
            "label": "ACL_ROLE_GLOBAL_ADMIN",
            "offset": 0,
            "slot": "10",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:25"
          },
          {
            "label": "_superadmin",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(address => mapping(bytes32 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bytes32)": {
            "label": "mapping(string => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(string => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "4cc782ff593421e997a1a4f424bd3748554ca13393dd2b3a5bc44b71bc87ce3e": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xce554b9a32208a5d41b7294112b3e58b3e7991fa90082a2057a218e2b51eb7fd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:14"
          },
          {
            "label": "_eip712Access",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:15"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:16"
          },
          {
            "label": "_hasAccess",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:17"
          },
          {
            "label": "_strToRoleBytes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:18"
          },
          {
            "label": "_hasAccessToResourceWithIdAndRole",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:19"
          },
          {
            "label": "_addrToRoleBytes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:20"
          },
          {
            "label": "ACL_SLOT_STORAGE",
            "offset": 0,
            "slot": "8",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:23"
          },
          {
            "label": "ACL_SLOT_ENCODED_ACCESS",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:24"
          },
          {
            "label": "ACL_ROLE_GLOBAL_ADMIN",
            "offset": 0,
            "slot": "10",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:25"
          },
          {
            "label": "_superadmin",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(address => mapping(bytes32 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bytes32)": {
            "label": "mapping(string => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(string => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "dbf0bec648a630dd1cb650dd12a326ea16c407130431aaca84a6125f3cbcc57f": {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xa568621652a32d2a92fb3031d97069519aa74cdb82a8b8d15dd5390e0c863ba2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1b9660c6e994c384d24febaae26bc3dfb1560ea9b824d16339aabaef8fdc698": {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0x416feb6c2f229143bd62b3aa8bbea951228b6013365aa4fd192c6fcce6da4387",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:14"
          },
          {
            "label": "_eip712Access",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:15"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:16"
          },
          {
            "label": "_hasAccess",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:17"
          },
          {
            "label": "_strToRoleBytes",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_string_memory_ptr,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:18"
          },
          {
            "label": "_hasAccessToResourceWithIdAndRole",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:19"
          },
          {
            "label": "_addrToRoleBytes",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:20"
          },
          {
            "label": "ACL_SLOT_STORAGE",
            "offset": 0,
            "slot": "58",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:23"
          },
          {
            "label": "ACL_SLOT_ENCODED_ACCESS",
            "offset": 0,
            "slot": "59",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:24"
          },
          {
            "label": "ACL_ROLE_GLOBAL_ADMIN",
            "offset": 0,
            "slot": "60",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:25"
          },
          {
            "label": "_superadmin",
            "offset": 0,
            "slot": "61",
            "type": "t_address",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:30"
          },
          {
            "label": "_acl",
            "offset": 0,
            "slot": "62",
            "type": "t_contract(ACLStorage)4781",
            "contract": "LabzTokenControllerLogicBeaconProxy",
            "src": "contracts/token/LabzTokenControllerLogicBeaconProxy.sol:17"
          },
          {
            "label": "_underlyingToken",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(LabzToken)4922",
            "contract": "LabzTokenControllerLogicBeaconProxy",
            "src": "contracts/token/LabzTokenControllerLogicBeaconProxy.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ACLStorage)4781": {
            "label": "contract ACLStorage",
            "numberOfBytes": "20"
          },
          "t_contract(LabzToken)4922": {
            "label": "contract LabzToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(address => mapping(bytes32 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bytes32)": {
            "label": "mapping(string => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(string => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "84b419d412f0a750a00d4ec72fb7bdcca3d989a0d47ff0e114ad2ee346a6a653": {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0x340187320c863370647a90bc0a287e2ec68c2f0f4f77555ddb77c9042249232a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)3006_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1753_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)1753_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Snapshots)1335_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:62"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Snapshots)1335_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:63"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)3006_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:207"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1753_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1753_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3006_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)1335_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1753_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3006_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Snapshots)1335_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dbfd8c16b6fb230af0b0a08e58cfba955570457e5275261f73673723d2fc0e72": {
      "address": "0x5302E909d1e93e30F05B5D6Eea766363D14F9892",
      "txHash": "0x2a439a0a0143db4a5b1a2a694ca7b06dcd9c432577caaffb672897d8be38c9a1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:14"
          },
          {
            "label": "_eip712Access",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:15"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:16"
          },
          {
            "label": "_hasAccess",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:17"
          },
          {
            "label": "_strToRoleBytes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:18"
          },
          {
            "label": "_hasAccessToResourceWithIdAndRole",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:19"
          },
          {
            "label": "_addrToRoleBytes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:20"
          },
          {
            "label": "ACL_SLOT_STORAGE",
            "offset": 0,
            "slot": "8",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:23"
          },
          {
            "label": "ACL_SLOT_ENCODED_ACCESS",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:24"
          },
          {
            "label": "ACL_ROLE_GLOBAL_ADMIN",
            "offset": 0,
            "slot": "10",
            "type": "t_bytes32",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:25"
          },
          {
            "label": "_superadmin",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "ACLStorage",
            "src": "contracts/storage/ACLStorage.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(address => mapping(bytes32 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bytes32)": {
            "label": "mapping(string => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(string => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "4dd51faf13933ce61a23d7d220af45845e4fd59ddddf428bcf7727f0c5bfe078": {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0x72af8698754c7d75d9bce591cb80b586f9fbb2a89b1fc6ae97d0389187add806",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)3006_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1753_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)1753_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Snapshots)1335_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:62"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Snapshots)1335_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:63"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)3006_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:207"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1753_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1753_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3006_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)1335_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1753_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3006_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Snapshots)1335_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
